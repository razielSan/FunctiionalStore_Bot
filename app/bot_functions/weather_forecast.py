from typing import List, Dict, Optional
import json
import traceback
from pathlib import Path

import folium
import aiohttp

from errors_handlers.main import error_handler_for_the_website
from logging_handler.main import error_logging
from settings.response import ResponseData
from settings.config import settings


async def get_data_weather_forecast_with_openweathermap(
    city: str,
    url_geolocated_openweathermap: str,
    url_future_openweathermap: str,
    url_current_openweathermap: str,
    api_openweathermap: str,
    path_to_weather_translation: Path,
    five_days: bool = False,
) -> ResponseData:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥–µ –∏–ª–∏ –Ω–∞ 5 –¥–Ω–µ–π, –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞
       https://openweathermap.org.

    Args:
        city (str): –ì–æ—Ä–æ–¥ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        url_geolocated_openweathermap (str): URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
        url_future_openweathermap (str): URL –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π
        url_current_openweathermap (str): URL –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã
        api_openweathermap (str): API –¥–ª—è —Å–∞–π—Ç–∞ openweathermap
        path_to_weather_translation (str): –ü—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ –æ–ø–∏—Å–∞–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã
        five_days (bool, optional): –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã.
                                    True - –ø—Ä–æ–≥–Ω–æ–∑–æ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π
                                    False - –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å

    Returns:
        ResponseData: –û–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∑–∞–ø—Ä–æ—Å–∞.

        –ê—Ç—Ä–∏–±—É—Ç—ã ResponseData:
            - message (Any | None): –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ).
            - error (str | None): –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ—É–¥–∞—á–µ–π.
            - status (int): HTTP-–∫–æ–¥ –æ—Ç–≤–µ—Ç–∞. 0 ‚Äî –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ.
            - url (str): URL, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã–ø–æ–ª–Ω—è–ª—Å—è –∑–∞–ø—Ä–æ—Å.
            - method (str): HTTP-–º–µ—Ç–æ–¥, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ.
    """
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º url –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
        url: str = url_geolocated_openweathermap.format(
            city,
            api_openweathermap,
        )

        async with aiohttp.ClientSession() as session:

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –≥–æ—Ä–æ–¥–∞
            geolocated_response: ResponseData = await error_handler_for_the_website(
                session=session,
                url=url,
            )

            if geolocated_response.error:
                return geolocated_response

            if not geolocated_response.message:
                return ResponseData(
                    error="–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
                    status=geolocated_response.status,
                    method=geolocated_response.method,
                    url=geolocated_response.url,
                )
            data_geolocated: Dict = geolocated_response.message[0]

            lat: float = data_geolocated["lat"]
            lon: float = data_geolocated["lon"]

            # –û–ø—Ä–µ–¥–µ—è–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π –∏–ª–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
            list_weather: List = []
            if five_days:
                future_urls: str = url_future_openweathermap.format(
                    lat,
                    lon,
                    api_openweathermap,
                )

                future_response: ResponseData = await error_handler_for_the_website(
                    session=session,
                    url=future_urls,
                )
                if future_response.error:
                    return future_response

                for weather in future_response.message["list"]:
                    if weather["dt_txt"].find("12:00:00") != -1:
                        list_weather.append(weather)
            else:
                current_url: str = url_current_openweathermap.format(
                    lat, lon, api_openweathermap
                )
                current_response: ResponseData = await error_handler_for_the_website(
                    url=current_url,
                    session=session,
                )
                if current_response.error:
                    return current_response
                list_weather.append(current_response.message)

        # –î–æ—Å—Ç–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏–π –ø–æ–≥–æ–¥—ã

        with open(path_to_weather_translation, "r", encoding="utf-8") as file:
            translate_weather = json.load(file)

        # if five_days:
        array_weather_forecast: List = []

        for weather in list_weather:
            # –ü—Ä–æ–≤–µ—Ä–µ—è–º –µ—Å—Ç—å –ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã –≤ –æ—Ç–≤–µ—Ç–µ
            try:
                weather_main: str = weather["weather"][0]["main"]
                weather_desc: str = weather["weather"][0]["description"]
                weather_description = translate_weather[weather_main][weather_desc]
            except (KeyError, IndexError, TypeError):
                weather_description = None
            # —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ —Ü–µ–ª—å—Å–∏—é
            degree: float = weather["main"]["temp"] - 273.15 
            feels_like: float = (
                weather["main"]["feels_like"] - 273.15
            )  # —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –æ—â—É—â–µ–Ω–∏—é
            pressure: int = weather["main"]["pressure"]  # –¥–∞–≤–ª–µ–Ω–∏–µ –≥–ü–∞
            humidity: int = weather["main"]["humidity"]  # –≤–ª–∞–∂–Ω–æ—Å—Ç—å %
            visibility: int = weather.get("visibility", 0)  # –≤–∏–¥–∏–º–æ—Å—Ç—å m
            wind: float = weather["wind"]["speed"]  # —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –º/c
            clouds: int = weather["clouds"]["all"]
            date: Optional[str] = weather.get("dt_txt", None)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
            temperature: str = (
                f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ {date}" if date else "–¢–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"
            )
            weather_description: str = (
                f"{weather_description[1]} {weather_description[0].title()} {weather_description[1]} \n\n"
                if weather_description
                else ""
            )
            data_weather: str = (
                f"{temperature}\n\n{city}\n\n"
                f"{weather_description}"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(degree)} ¬∞C\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –æ—â—É—â–µ–Ω–∏—é: {round(feels_like)} \n"
                f"üìä –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –ì–ø–∞\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity} %\n"
                f"üëÅÔ∏è –í–∏–¥–∏–º–æ—Å—Ç—å: {visibility} –º\n"
                f"üå¨Ô∏è C–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind} –º/—Å\n"
                f"‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {clouds} %"
            )

            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
            if not five_days:
                return ResponseData(
                    message=data_weather,
                    status=200,
                    url=current_response.url,
                    method=current_response.method,
                )
            array_weather_forecast.append(data_weather)

        # –ï—Å–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π
        weather_data: str = "\n\n".join(array_weather_forecast)
        return ResponseData(
            message=weather_data,
            status=200,
            url=future_response.url,
            method=future_response.method,
        )
    except Exception:
        error_logging.error(
            settings.logging.ERROR_WEB_RESPONSE_MESSAGE.format(
                method="<unknown>",
                status=0,
                url="<unknown>",
                error_message=f"Unexpected error: {traceback.format_exc()}",
            )
        )
        return ResponseData(
            error="–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞.–ò–¥–µ—Ç —Ä–∞–±–æ—Ç–∞ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é...",
            status=0,
            url="<unknown>",
            method="<unknown>",
        )


async def get_air_pollution_city(
    city: str,
    api_openweathermap: str,
    url_geolocated_openweathermap,
    url_air_pollution: str,
    air_pollution: Dict,
    aqi: ResponseData,
) -> Dict:
    """–í–æ–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —É—Ä–æ–≤–Ω–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞, –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞
       https://openweathermap.org

    Args:
        city (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        api_openweathermap (str): API –¥–ª—è —Å–∞–π—Ç–∞ openweathermap
        url_geolocated_openweathermap (_type_): URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
        url_air_pollution (str): URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–∏ –≤–æ–∑–¥—É—Ö–∞
        air_pollution (Dict): C–ª–æ–≤–∞—Ä—å —Å –∫–æ–º–ø–µ–Ω–µ–Ω—Ç–∞–º–∏ –∏ –¥–∞–Ω–Ω—ã–º–∏ –æ –Ω–∏—Ö
        aqi (Dict): –°–ª–æ–≤–∞—Ä—å —Å –Ω–æ–º–µ—Ä–∞–º–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏–Ω–¥–µ–∫—Å–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞

    Returns:
        ResponseData: –û–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∑–∞–ø—Ä–æ—Å–∞.

        –ê—Ç—Ä–∏–±—É—Ç—ã ResponseData:
            - message (Any | None): –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ).
            - error (str | None): –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ—É–¥–∞—á–µ–π.
            - status (int): HTTP-–∫–æ–¥ –æ—Ç–≤–µ—Ç–∞. 0 ‚Äî –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ.
            - url (str): URL, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã–ø–æ–ª–Ω—è–ª—Å—è –∑–∞–ø—Ä–æ—Å.
            - method (str): HTTP-–º–µ—Ç–æ–¥, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –≥–æ—Ä–æ–¥–∞
        # API = settings.API_OPENWEATHERMAP
        url_geolocated: str = url_geolocated_openweathermap.format(
            city, api_openweathermap
        )
        async with aiohttp.ClientSession() as session:

            # –ü–æ–ª—É—á–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –≥–æ—Ä–æ–¥–∞
            geolocated_response: ResponseData = await error_handler_for_the_website(
                session=session,
                url=url_geolocated,
            )
            if geolocated_response.error:
                return geolocated_response

            if not geolocated_response.message:
                return ResponseData(
                    error="–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
                    status=geolocated_response.status,
                    url=geolocated_response.url,
                    method=geolocated_response.method,
                )

            data_geolocated: Dict = geolocated_response.message[0]
            lat: float = data_geolocated["lat"]
            lon: float = data_geolocated["lon"]

            url_air_pollution: str = url_air_pollution.format(
                lat, lon, api_openweathermap
            )

            # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–≤–Ω—è –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞
            aqi_response: ResponseData = await error_handler_for_the_website(
                session=session,
                url=url_air_pollution,
            )
            if aqi_response.error:
                return aqi_response

        # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —É—Ä–æ–≤–Ω—é –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—é –≤–æ–∑–¥—É—Ö–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞
        data_aqii_city = aqi_response.message

        if not data_aqii_city:
            return ResponseData(
                error=f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–∏ –≤–æ–∑–¥—É—Ö –¥–ª—è {city}",
                status=aqi_response.status,
                url=aqi_response.url,
                method=aqi_response.method,
            )

        # –ü–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞
        aqi_city: int = data_aqii_city["list"][0]["main"]["aqi"]

        data: str = f"üå´Ô∏è –£—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä–∑—è–Ω–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞ üå´Ô∏è\n\n{city.title()}\n\n"

        air_aqi: str = f"üå°Ô∏è –ò–Ω–¥–µ–∫—Å –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞ üå°Ô∏è\n\n{aqi[aqi_city]}\n\n"

        # –°–ª–æ–≤–∞—Ä—å —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤ –≤–æ–∑–¥—É—Ö–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞
        components_dict: Dict = data_aqii_city["list"][0]["components"]

        list_components: List[str] = [data, air_aqi]

        # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º —Å–ª–æ–≤–∞—Ä—è –∏–Ω–¥–µ–∫—Å–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞
        for component in air_pollution:

            # –¢–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
            data = components_dict.get(component, None)
            if not data:
                continue

            # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–º –∏–º —á–∏—Å–ª–æ–≤—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º
            for desc, values in air_pollution[component].items():
                if isinstance(values[0], str):
                    break

                # –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
                air_pollution_component: Dict = air_pollution[component]

                # –í—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–º–ø–Ω–µ–Ω—Ç–∞ –¥–ª—è –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É –≤—ã—Ä–∞–∂–µ–Ω–∏—é
                if values[0] <= data < values[1]:
                    data_copmponent: str = (
                        f"{air_pollution_component['emoji']}"  # –≠–º–æ–¥–∂–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
                        f" {component} ({air_pollution_component['translation']}): "  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
                        f"{data} - {desc}\n"
                    )
                    list_components.append(data_copmponent)

        air_components: str = "".join(list_components)
        return ResponseData(
            message=air_components,
            status=aqi_response.status,
            url=aqi_response.url,
            method=aqi_response.method,
        )
    except Exception:
        error_logging.error(
            settings.logging.ERROR_WEB_RESPONSE_MESSAGE.format(
                method="<unknown>",
                status=0,
                url="<unknown>",
                error_message=f"Unexpected error: {traceback.format_exc()}",
            )
        )
        return ResponseData(
            error="–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞.–ò–¥–µ—Ç —Ä–∞–±–æ—Ç–∞ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é...",
            status=0,
            url="<unknown>",
            method="<unknown>",
        )


async def get_weather_map(
    api_openweathermap: str,
    weather_layers: Dict,
    url_weather_map: str,
    path_to_weathermap: Path,
    location_weather: Optional[List] = None,
    filename="weather_layers_map.html",
    zoom=5,
    overlay=True,
    control=True,
    opacity=0.6,
) -> ResponseData:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞—Ä—Ç—É –ø–æ–≥–æ–¥—ã –¥–ª—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞ https://openweathermap.org

    Args:
        api_openweathermap (str): API –¥–ª—è —Å–∞–π—Ç–∞ openweathermap
        weather_layers (Dict): –°–ª–æ–≤–∞—Ä—å –ø–æ–≥–æ–¥–Ω—ã—Ö —Å–ª–æ—ë–≤ OpenWeatherMap
        url_weather_map (str): URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç –ø–æ–≥–æ–¥—ã
        path_to_weathermap: (Path): –ü—É—Ç—å –¥–æ –ø–∞–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –ø–æ–≥–æ–¥—ã
        location_weather (list, optional): –°—Ç–∞—Ä—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è (–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ú–æ—Å–∫–≤–∞ [55.751244, 37.618423])
        filename (str, optional): –ò–º—è —Ñ–∞–π–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'weather_layers_map.html')
        zoom (int, optional): –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ (–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 5)
        overlay (bool, optional): –ß—Ç–æ–±—ã —Å–ª–æ–∏ –±—ã–ª–∏ –ø–æ–≤–µ—Ä—Ö –∫–∞—Ä—Ç—ã (–ü–æ —É–º–æ–ª—á–∞–Ω–∏ True)
        control (bool, optional): –ß—Ç–æ–±—ã —Å–ª–æ–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–ª—é—á–∞—Ç—å/–≤—ã–∫–ª—é—á–∞—Ç—å(–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é True)
        opacity (float, optional): –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –æ—Ç 0(–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π) –¥–æ 1(–Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π) (–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 0.6)

    Returns:
        ResponseData: –û–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∑–∞–ø—Ä–æ—Å–∞.

        –ê—Ç—Ä–∏–±—É—Ç—ã ResponseData:
            - message (Any | None): –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ).
            - error (str | None): –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ—É–¥–∞—á–µ–π.
            - status (int): HTTP-–∫–æ–¥ –æ—Ç–≤–µ—Ç–∞. 0 ‚Äî –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ.
            - url (str): URL, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã–ø–æ–ª–Ω—è–ª—Å—è –∑–∞–ø—Ä–æ—Å.
            - method (str): HTTP-–º–µ—Ç–æ–¥, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ.
    """

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Å–∞–π—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
        async with aiohttp.ClientSession() as session:
            weather_map: ResponseData = await error_handler_for_the_website(
                session=session,
                url=url_weather_map.format(api_openweathermap),
                data_type="BYTES",
            )

            if weather_map.error:
                return weather_map

        # –ï—Å–ª–∏ –Ω–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –ª–æ–∫–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ
        if not location_weather:
            location_weather: List = settings.LOCATION_WEATHER

        m: folium.Map = folium.Map(
            location=location_weather,
            zoom_start=zoom,
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Å–ª–æ–π
        for name, layer in weather_layers.items():
            folium.TileLayer(
                tiles=f"https://tile.openweathermap.org/map/{layer}/{{z}}/{{x}}/{{y}}.png?appid={api_openweathermap}",
                attr="OpenWeatherMap",
                name=name,
                overlay=overlay,  # —á—Ç–æ–±—ã —Å–ª–æ–π –±—ã–ª –ø–æ–≤–µ—Ä—Ö –±–∞–∑–æ–≤–æ–π –∫–∞—Ä—Ç—ã
                control=control,  # —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–∫–ª—é—á–∞—Ç—å/–≤—ã–∫–ª—é—á–∞—Ç—å
                opacity=opacity,  # –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å (0 ‚Äî –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π, 1 ‚Äî –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π)
            ).add_to(m)

        # –î–æ–±–∞–≤–ª—è–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—è–º–∏
        folium.LayerControl().add_to(m)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç—É –ø–æ–≥–æ–¥—ã
        path_file: Path = path_to_weathermap / filename
        m.save(path_file)

        return ResponseData(
            message=path_file,
            status=200,
            url=weather_map.url,
            method=weather_map.method,
        )

    except Exception:
        error_logging.error(
            settings.logging.ERROR_WEB_RESPONSE_MESSAGE.format(
                method="<unknown>",
                status=0,
                url="<unknown>",
                error_message=f"Unexpected error: {traceback.format_exc()}",
            )
        )
        return ResponseData(
            error="–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞.–ò–¥–µ—Ç —Ä–∞–±–æ—Ç–∞ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é...",
            status=0,
            url="<unknown>",
            method="<unknown>",
        )
